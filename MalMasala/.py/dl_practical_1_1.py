# -*- coding: utf-8 -*-
"""DL_Practical_1.1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1r4YiSieldS77LBWjCopME5OKSRzBSYSE
"""

import tensorflow as tf
import pandas as pd
from keras.datasets import boston_housing
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split

df=pd.read_csv("BostonHousing.csv")

x=df.drop(['medv'],axis=1)
y=df['medv']

train_x,test_x,train_y,test_y=train_test_split(x,y,random_state=42,test_size=0.20)

print(train_x.shape)
print(train_y.shape)
print(test_x.shape)
print(test_y.shape)

test_y.head(n=10)

sc=StandardScaler()
train_x=sc.fit_transform(train_x)
test_x=sc.transform(test_x)

from keras.models import Sequential
from keras.layers import *

def housePrice():
  model=Sequential()
  model.add(Dense(128,activation='relu',input_dim=13))
  model.add(Dense(64,activation='relu'))
  model.add(Dense(32,activation='relu'))
  model.add(Dense(16,activation='relu'))
  model.add(Dense(1))
  model.compile(optimizer='adam',loss='mean_squared_error',metrics=['mae'])
  return model

model=housePrice()
history=model.fit(train_x,train_y,epochs=100,batch_size=1,verbose=1,validation_data=(test_x,test_y))

test_y

input=[[-0.39680933, -0.50032012, -1.00711147, -0.27808871, -0.39541229,
        0.14128239,  0.55591643, -0.54585271, -0.50779731, -0.65092617,
       -0.77195078,  0.42887165, -0.48121032]]
output=23.6
print("Actual output : ",output)
print("Predicted output : ",model.predict(input))